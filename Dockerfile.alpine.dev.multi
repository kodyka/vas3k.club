# Build stage
FROM python:3.8.16-alpine3.17 AS build

ENV MODE dev

ENV PYTHONUNBUFFERED 1

RUN apk add --update --no-cache postgresql-client jpeg-dev
RUN apk add --update --no-cache --virtual .tmp-build-deps \
      gcc libc-dev linux-headers postgresql-dev musl-dev zlib zlib-dev \
    && apk add libffi-dev make

WORKDIR /app

COPY . /app
# COPY etc/crontab /etc/crontab
# RUN chmod 600 /etc/crontab

# RUN cd frontend && npm install && npm run build && cd ..

RUN pip3 install pipenv==2021.5.29
# RUN pip3 install cffi
RUN sh -c 'if [ "$MODE" = 'production' ]; then pipenv lock --keep-outdated --requirements > requirements.txt; fi'
RUN sh -c 'if [ "$MODE" = 'dev' ]; then pipenv lock --dev --requirements > requirements.txt; fi'
RUN pip3 install -r requirements.txt

# Final stage
FROM python:3.8.16-alpine3.17

RUN apk add --update --no-cache make postgresql-libs

COPY --from=build /app /app
COPY --from=build /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
# COPY --from=build /usr/local/bin/ /usr/local/bin/

WORKDIR /app