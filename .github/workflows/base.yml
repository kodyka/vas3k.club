name: "Build base:alpine-core on ghc"

on:
    workflow_dispatch:
    push:
        branches-ignore:
            - "**"

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - uses: cardinalby/export-env-action@v1
              with:
                  envFile: ".github_build/base.alpine.env"
                  export: "true"
                  expandWithJobEnv: "true"
                  expand: "true"

            - name: Set up QEMU
              uses: docker/setup-qemu-action@master
              with:
                  platforms: all

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@master

#             - name: Cache Docker layers
#               uses: actions/cache@v2
#               with:
#                   path: /tmp/.buildx-cache
#                   key: ${{ runner.os }}-buildx-${{ github.sha }}
#                   restore-keys: |
#                       ${{ runner.os }}-buildx-

            - name: Login to GitHub Container Registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io # Use GitHub Container Registry instead of Docker Hub
                  username: ${{ github.actor }} # Use GitHub username as login
                  password: ${{ secrets.GITHUB_TOKEN }} # Use GitHub token as password

            - name: Build Multi-Arch
              uses: docker/build-push-action@v2
              with:
                  builder: ${{ steps.buildx.outputs.name }}
                  context: .
                  file: ./Dockerfile.${{ env.OS_NAME }}.dev.multi
                  build-args: |
                      BUILD_IMAGE=${{ env.OS_NAME }}:${{ env.OS_VERSION }}
                      GOLANG_IMAGE=${{ env.GOLANG_IMAGE }}
                  platforms: linux/amd64,linux/arm64,linux/arm/v7
                  push: true
                  tags: |
                      ghcr.io/${{ github.repository_owner }}/club-${{ env.service_name }}:${{ env.OS_NAME }}-${{ env.service_name }}-${{ env.OBS_VERSION }}
                      ghcr.io/${{ github.repository_owner }}/club-${{ env.service_name }}:${{ env.OS_NAME }}-${{ env.service_name }}-latest
#                   cache-from: type=local,src=/tmp/.buildx-cache
#                   cache-to: type=local,dest=/tmp/.buildx-cache-new
